{
    "project_root": "D:\\SWARM\\Dream.OS",
    "num_files_analyzed": 42,
    "analysis_details": {
        "run_overnight.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "archive\\dupe_logging\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "archive\\deprecated\\auth_managers\\legacy_auth_manager.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "_attempt_login",
                "login",
                "logout",
                "verify_session",
                "refresh_token",
                "cleanup_expired_sessions",
                "login_operation"
            ],
            "classes": {
                "AuthManager": {
                    "methods": [
                        "__init__",
                        "_attempt_login",
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token",
                        "cleanup_expired_sessions"
                    ],
                    "docstring": "Authentication manager implementing the platform-agnostic interface.",
                    "base_classes": [
                        "AbstractAuthInterface"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 15
        },
        "archive\\deprecated\\auth_managers\\legacy_session_manager.py": {
            "language": ".py",
            "functions": [
                "extend",
                "is_valid",
                "time_remaining",
                "__init__",
                "start_cleanup",
                "stop_cleanup",
                "create_session",
                "get_session",
                "invalidate_session",
                "cleanup_expired",
                "_generate_session_id",
                "cleanup_loop"
            ],
            "classes": {
                "Session": {
                    "methods": [
                        "extend",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents an active user session.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "SessionManager": {
                    "methods": [
                        "__init__",
                        "start_cleanup",
                        "stop_cleanup",
                        "create_session",
                        "get_session",
                        "invalidate_session",
                        "cleanup_expired",
                        "_generate_session_id"
                    ],
                    "docstring": "Manages user sessions with automatic cleanup.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 23
        },
        "backups\\auth_backup_20250605_161813\\auth\\base.py": {
            "language": ".py",
            "functions": [
                "__post_init__",
                "is_valid",
                "time_remaining"
            ],
            "classes": {
                "ExpirableMixin": {
                    "methods": [
                        "__post_init__",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Mixin providing expiration-related functionality.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 6
        },
        "backups\\auth_backup_20250605_161813\\auth\\interface.py": {
            "language": ".py",
            "functions": [
                "login",
                "logout",
                "verify_session",
                "refresh_token"
            ],
            "classes": {
                "AuthError": {
                    "methods": [],
                    "docstring": "Base class for authentication errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "AbstractAuthInterface": {
                    "methods": [
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token"
                    ],
                    "docstring": "Abstract base class defining the authentication interface.",
                    "base_classes": [
                        "ABC"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 8
        },
        "backups\\auth_backup_20250605_161813\\auth\\manager.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "_attempt_login",
                "login",
                "logout",
                "verify_session",
                "refresh_token",
                "cleanup_expired_sessions",
                "login_operation"
            ],
            "classes": {
                "AuthManager": {
                    "methods": [
                        "__init__",
                        "_attempt_login",
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token",
                        "cleanup_expired_sessions"
                    ],
                    "docstring": "Authentication manager implementing the platform-agnostic interface.",
                    "base_classes": [
                        "AbstractAuthInterface"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 15
        },
        "backups\\auth_backup_20250605_161813\\auth\\retry.py": {
            "language": ".py",
            "functions": [
                "retry",
                "__init__",
                "calculate_delay",
                "execute",
                "decorator",
                "wrapper"
            ],
            "classes": {
                "RetryError": {
                    "methods": [],
                    "docstring": "Base class for retry-related errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "RetryMechanism": {
                    "methods": [
                        "__init__",
                        "calculate_delay",
                        "execute"
                    ],
                    "docstring": "Implements retry logic with exponential backoff.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 9
        },
        "backups\\auth_backup_20250605_161813\\auth\\session.py": {
            "language": ".py",
            "functions": [
                "extend",
                "is_valid",
                "time_remaining",
                "__init__",
                "start_cleanup",
                "stop_cleanup",
                "create_session",
                "get_session",
                "invalidate_session",
                "cleanup_expired",
                "_generate_session_id",
                "cleanup_loop"
            ],
            "classes": {
                "Session": {
                    "methods": [
                        "extend",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents an active user session.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "SessionManager": {
                    "methods": [
                        "__init__",
                        "start_cleanup",
                        "stop_cleanup",
                        "create_session",
                        "get_session",
                        "invalidate_session",
                        "cleanup_expired",
                        "_generate_session_id"
                    ],
                    "docstring": "Manages user sessions with automatic cleanup.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 23
        },
        "backups\\auth_backup_20250605_161813\\auth\\token.py": {
            "language": ".py",
            "functions": [
                "is_valid",
                "time_remaining",
                "__init__",
                "generate_token",
                "validate_token",
                "get_token_info",
                "refresh_token",
                "invalidate_token",
                "cleanup_expired",
                "_sign_token"
            ],
            "classes": {
                "TokenInfo": {
                    "methods": [
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents token metadata.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "TokenHandler": {
                    "methods": [
                        "__init__",
                        "generate_token",
                        "validate_token",
                        "get_token_info",
                        "refresh_token",
                        "invalidate_token",
                        "cleanup_expired",
                        "_sign_token"
                    ],
                    "docstring": "Handles token generation, validation, and refresh.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 20
        },
        "backups\\auth_backup_20250605_161813\\auth\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "backups\\auth_backup_20250605_162224\\auth\\manager.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "_attempt_login",
                "login",
                "logout",
                "verify_session",
                "refresh_token",
                "cleanup_expired_sessions",
                "login_operation"
            ],
            "classes": {
                "AuthManager": {
                    "methods": [
                        "__init__",
                        "_attempt_login",
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token",
                        "cleanup_expired_sessions"
                    ],
                    "docstring": "Authentication manager implementing the platform-agnostic interface.",
                    "base_classes": [
                        "AbstractAuthInterface"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 15
        },
        "backups\\auth_backup_20250605_162224\\auth\\retry.py": {
            "language": ".py",
            "functions": [
                "retry",
                "__init__",
                "calculate_delay",
                "execute",
                "decorator",
                "wrapper"
            ],
            "classes": {
                "RetryError": {
                    "methods": [],
                    "docstring": "Base class for retry-related errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "RetryMechanism": {
                    "methods": [
                        "__init__",
                        "calculate_delay",
                        "execute"
                    ],
                    "docstring": "Implements retry logic with exponential backoff.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 9
        },
        "backups\\auth_backup_20250605_162224\\auth\\session.py": {
            "language": ".py",
            "functions": [
                "extend",
                "is_valid",
                "time_remaining",
                "__init__",
                "start_cleanup",
                "stop_cleanup",
                "create_session",
                "get_session",
                "invalidate_session",
                "cleanup_expired",
                "_generate_session_id",
                "cleanup_loop"
            ],
            "classes": {
                "Session": {
                    "methods": [
                        "extend",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents an active user session.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "SessionManager": {
                    "methods": [
                        "__init__",
                        "start_cleanup",
                        "stop_cleanup",
                        "create_session",
                        "get_session",
                        "invalidate_session",
                        "cleanup_expired",
                        "_generate_session_id"
                    ],
                    "docstring": "Manages user sessions with automatic cleanup.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 23
        },
        "backups\\auth_backup_20250605_162224\\auth\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "backups\\auth_backup_20250605_162744\\auth\\base.py": {
            "language": ".py",
            "functions": [
                "__post_init__",
                "is_valid",
                "time_remaining"
            ],
            "classes": {
                "ExpirableMixin": {
                    "methods": [
                        "__post_init__",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Mixin providing expiration-related functionality.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 6
        },
        "backups\\auth_backup_20250605_162744\\auth\\interface.py": {
            "language": ".py",
            "functions": [
                "login",
                "logout",
                "verify_session",
                "refresh_token"
            ],
            "classes": {
                "AuthError": {
                    "methods": [],
                    "docstring": "Base class for authentication errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "AbstractAuthInterface": {
                    "methods": [
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token"
                    ],
                    "docstring": "Abstract base class defining the authentication interface.",
                    "base_classes": [
                        "ABC"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 8
        },
        "backups\\auth_backup_20250605_162744\\auth\\manager.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "_attempt_login",
                "login",
                "logout",
                "verify_session",
                "refresh_token",
                "cleanup_expired_sessions",
                "login_operation"
            ],
            "classes": {
                "AuthManager": {
                    "methods": [
                        "__init__",
                        "_attempt_login",
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token",
                        "cleanup_expired_sessions"
                    ],
                    "docstring": "Authentication manager implementing the platform-agnostic interface.",
                    "base_classes": [
                        "AbstractAuthInterface"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 15
        },
        "backups\\auth_backup_20250605_162744\\auth\\retry.py": {
            "language": ".py",
            "functions": [
                "retry",
                "__init__",
                "calculate_delay",
                "execute",
                "decorator",
                "wrapper"
            ],
            "classes": {
                "RetryError": {
                    "methods": [],
                    "docstring": "Base class for retry-related errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "RetryMechanism": {
                    "methods": [
                        "__init__",
                        "calculate_delay",
                        "execute"
                    ],
                    "docstring": "Implements retry logic with exponential backoff.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 9
        },
        "backups\\auth_backup_20250605_162744\\auth\\session.py": {
            "language": ".py",
            "functions": [
                "extend",
                "is_valid",
                "time_remaining",
                "__init__",
                "start_cleanup",
                "stop_cleanup",
                "create_session",
                "get_session",
                "invalidate_session",
                "cleanup_expired",
                "_generate_session_id",
                "cleanup_loop"
            ],
            "classes": {
                "Session": {
                    "methods": [
                        "extend",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents an active user session.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "SessionManager": {
                    "methods": [
                        "__init__",
                        "start_cleanup",
                        "stop_cleanup",
                        "create_session",
                        "get_session",
                        "invalidate_session",
                        "cleanup_expired",
                        "_generate_session_id"
                    ],
                    "docstring": "Manages user sessions with automatic cleanup.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 23
        },
        "backups\\auth_backup_20250605_162744\\auth\\token.py": {
            "language": ".py",
            "functions": [
                "is_valid",
                "time_remaining",
                "__init__",
                "generate_token",
                "validate_token",
                "get_token_info",
                "refresh_token",
                "invalidate_token",
                "cleanup_expired",
                "_sign_token"
            ],
            "classes": {
                "TokenInfo": {
                    "methods": [
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents token metadata.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "TokenHandler": {
                    "methods": [
                        "__init__",
                        "generate_token",
                        "validate_token",
                        "get_token_info",
                        "refresh_token",
                        "invalidate_token",
                        "cleanup_expired",
                        "_sign_token"
                    ],
                    "docstring": "Handles token generation, validation, and refresh.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 20
        },
        "backups\\auth_backup_20250605_162744\\auth\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\system_init.py": {
            "language": ".py",
            "functions": [
                "main",
                "__init__",
                "initialize_core_systems",
                "establish_communication_channels",
                "begin_monitoring",
                "report_status"
            ],
            "classes": {
                "SystemInitializer": {
                    "methods": [
                        "__init__",
                        "initialize_core_systems",
                        "establish_communication_channels",
                        "begin_monitoring",
                        "report_status"
                    ],
                    "docstring": "Handles system initialization and communication setup.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 11
        },
        "dreamos\\core\\agent_control\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\auth\\base.py": {
            "language": ".py",
            "functions": [
                "__post_init__",
                "is_valid",
                "time_remaining"
            ],
            "classes": {
                "ExpirableMixin": {
                    "methods": [
                        "__post_init__",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Mixin providing expiration-related functionality.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 6
        },
        "dreamos\\core\\auth\\interface.py": {
            "language": ".py",
            "functions": [
                "login",
                "logout",
                "verify_session",
                "refresh_token"
            ],
            "classes": {
                "AuthError": {
                    "methods": [],
                    "docstring": "Base class for authentication errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "AbstractAuthInterface": {
                    "methods": [
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token"
                    ],
                    "docstring": "Abstract base class defining the authentication interface.",
                    "base_classes": [
                        "ABC"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 8
        },
        "dreamos\\core\\auth\\token.py": {
            "language": ".py",
            "functions": [
                "is_valid",
                "time_remaining",
                "__init__",
                "generate_token",
                "validate_token",
                "get_token_info",
                "refresh_token",
                "invalidate_token",
                "cleanup_expired",
                "_sign_token"
            ],
            "classes": {
                "TokenInfo": {
                    "methods": [
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents token metadata.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "TokenHandler": {
                    "methods": [
                        "__init__",
                        "generate_token",
                        "validate_token",
                        "get_token_info",
                        "refresh_token",
                        "invalidate_token",
                        "cleanup_expired",
                        "_sign_token"
                    ],
                    "docstring": "Handles token generation, validation, and refresh.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 20
        },
        "dreamos\\core\\auth\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\utils\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\social\\utils\\base_log_manager.py": {
            "language": ".py",
            "functions": [],
            "classes": {
                "LogLevel": {
                    "methods": [],
                    "docstring": "Standard log levels for consistent logging across the application.",
                    "base_classes": [
                        "Enum"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 0
        },
        "dreamos\\social\\utils\\cleanup.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "_is_file_locked",
                "_force_close_handle",
                "_wait_for_file_unlock",
                "safe_remove",
                "cleanup_directory",
                "cleanup_temp_files"
            ],
            "classes": {
                "FileCleanup": {
                    "methods": [
                        "__init__",
                        "_is_file_locked",
                        "_force_close_handle",
                        "_wait_for_file_unlock",
                        "safe_remove",
                        "cleanup_directory",
                        "cleanup_temp_files"
                    ],
                    "docstring": "Handles safe file cleanup with proper lock handling.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 14
        },
        "dreamos\\social\\utils\\json_settings.py": {
            "language": ".py",
            "functions": [
                "__post_init__",
                "__getattr__",
                "__iter__",
                "items",
                "values",
                "__getitem__",
                "as_dict",
                "__init__",
                "reload",
                "convert"
            ],
            "classes": {
                "ConfigNode": {
                    "methods": [
                        "__post_init__",
                        "__getattr__",
                        "__iter__",
                        "items",
                        "values",
                        "__getitem__",
                        "as_dict"
                    ],
                    "docstring": "Data holder that provides attribute access like a dotmap.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "JSONConfig": {
                    "methods": [
                        "__init__",
                        "reload"
                    ],
                    "docstring": "Load configuration from a JSON file.",
                    "base_classes": [
                        "ConfigNode"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 19
        },
        "dreamos\\social\\utils\\log_pipeline.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "_get_file_lock",
                "_is_file_locked",
                "_force_close_handle",
                "_wait_for_file_unlock",
                "add_entry",
                "flush",
                "read_logs",
                "get_log_info",
                "stop",
                "__del__"
            ],
            "classes": {
                "LogPipeline": {
                    "methods": [
                        "__init__",
                        "_get_file_lock",
                        "_is_file_locked",
                        "_force_close_handle",
                        "_wait_for_file_unlock",
                        "add_entry",
                        "flush",
                        "read_logs",
                        "get_log_info",
                        "stop",
                        "__del__"
                    ],
                    "docstring": "Unified log handling system combining batching and reading functionality.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 22
        },
        "dreamos\\social\\utils\\media_validator.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "validate_files",
                "validate",
                "validate_media"
            ],
            "classes": {
                "MediaValidator": {
                    "methods": [
                        "__init__",
                        "validate_files",
                        "validate",
                        "validate_media"
                    ],
                    "docstring": "Validates media files for upload.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 8
        },
        "dreamos\\social\\utils\\rate_limiter.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "check_rate_limit",
                "set_rate_limit",
                "reset_limits",
                "get_remaining"
            ],
            "classes": {
                "RateLimiter": {
                    "methods": [
                        "__init__",
                        "check_rate_limit",
                        "set_rate_limit",
                        "reset_limits",
                        "get_remaining"
                    ],
                    "docstring": "Handles rate limiting for API operations.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 10
        },
        "dreamos\\social\\utils\\social_common.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "wait_for_element",
                "wait_for_clickable",
                "retry_click",
                "handle_login",
                "post_content",
                "verify_post_success",
                "validate_media",
                "upload_media"
            ],
            "classes": {
                "SocialMediaUtils": {
                    "methods": [
                        "__init__",
                        "wait_for_element",
                        "wait_for_clickable",
                        "retry_click",
                        "handle_login",
                        "post_content",
                        "verify_post_success",
                        "validate_media",
                        "upload_media"
                    ],
                    "docstring": "Common utilities for social media operations.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 18
        },
        "dreamos\\social\\utils\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "scripts\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "social\\strategies\\twitter\\rate_limiting\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "social\\utils\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "tests\\utils\\test_mocks.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        }
    }
}