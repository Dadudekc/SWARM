{
    "project_root": "D:\\SWARM\\Dream.OS",
    "num_files_analyzed": 65,
    "analysis_details": {
        "__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "agent_tools\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "agent_tools\\autonomy\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "agent_tools\\mailbox\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "agent_tools\\swarm_tools\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "agent_tools\\swarm_tools\\analyzers\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "agent_tools\\swarm_tools\\browser\\example_bridge.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "agent_tools\\swarm_tools\\browser\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "agent_tools\\swarm_tools\\scanner\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "agent_tools\\swarm_tools\\tests\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "agent_tools\\swarm_tools\\utils\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "archive\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "archive\\orphans\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "backups\\auth_backup_20250605_161813\\auth\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "backups\\auth_backup_20250605_161813\\auth\\interface.py": {
            "language": ".py",
            "functions": [
                "login",
                "logout",
                "verify_session",
                "refresh_token"
            ],
            "classes": {
                "AuthError": {
                    "methods": [],
                    "docstring": "Base class for authentication errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "AbstractAuthInterface": {
                    "methods": [
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token"
                    ],
                    "docstring": "Abstract base class defining the authentication interface.",
                    "base_classes": [
                        "ABC"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 8
        },
        "backups\\auth_backup_20250605_161813\\auth\\manager.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "_attempt_login",
                "login",
                "logout",
                "verify_session",
                "refresh_token",
                "cleanup_expired_sessions",
                "login_operation"
            ],
            "classes": {
                "AuthManager": {
                    "methods": [
                        "__init__",
                        "_attempt_login",
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token",
                        "cleanup_expired_sessions"
                    ],
                    "docstring": "Authentication manager implementing the platform-agnostic interface.",
                    "base_classes": [
                        "AbstractAuthInterface"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 15
        },
        "backups\\auth_backup_20250605_161813\\auth\\retry.py": {
            "language": ".py",
            "functions": [
                "retry",
                "__init__",
                "calculate_delay",
                "execute",
                "decorator",
                "wrapper"
            ],
            "classes": {
                "RetryError": {
                    "methods": [],
                    "docstring": "Base class for retry-related errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "RetryMechanism": {
                    "methods": [
                        "__init__",
                        "calculate_delay",
                        "execute"
                    ],
                    "docstring": "Implements retry logic with exponential backoff.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 9
        },
        "backups\\auth_backup_20250605_161813\\auth\\token.py": {
            "language": ".py",
            "functions": [
                "is_valid",
                "time_remaining",
                "__init__",
                "generate_token",
                "validate_token",
                "get_token_info",
                "refresh_token",
                "invalidate_token",
                "cleanup_expired",
                "_sign_token"
            ],
            "classes": {
                "TokenInfo": {
                    "methods": [
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents token metadata.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "TokenHandler": {
                    "methods": [
                        "__init__",
                        "generate_token",
                        "validate_token",
                        "get_token_info",
                        "refresh_token",
                        "invalidate_token",
                        "cleanup_expired",
                        "_sign_token"
                    ],
                    "docstring": "Handles token generation, validation, and refresh.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 20
        },
        "backups\\auth_backup_20250605_162224\\auth\\base.py": {
            "language": ".py",
            "functions": [
                "__post_init__",
                "is_valid",
                "time_remaining"
            ],
            "classes": {
                "ExpirableMixin": {
                    "methods": [
                        "__post_init__",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Mixin providing expiration-related functionality.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 6
        },
        "backups\\auth_backup_20250605_162744\\auth\\base.py": {
            "language": ".py",
            "functions": [
                "__post_init__",
                "is_valid",
                "time_remaining"
            ],
            "classes": {
                "ExpirableMixin": {
                    "methods": [
                        "__post_init__",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Mixin providing expiration-related functionality.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 6
        },
        "backups\\auth_backup_20250605_162744\\auth\\interface.py": {
            "language": ".py",
            "functions": [
                "login",
                "logout",
                "verify_session",
                "refresh_token"
            ],
            "classes": {
                "AuthError": {
                    "methods": [],
                    "docstring": "Base class for authentication errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "AbstractAuthInterface": {
                    "methods": [
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token"
                    ],
                    "docstring": "Abstract base class defining the authentication interface.",
                    "base_classes": [
                        "ABC"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 8
        },
        "backups\\auth_backup_20250605_162224\\auth\\manager.py": {
            "language": ".py",
            "functions": [
                "__init__",
                "_attempt_login",
                "login",
                "logout",
                "verify_session",
                "refresh_token",
                "cleanup_expired_sessions",
                "login_operation"
            ],
            "classes": {
                "AuthManager": {
                    "methods": [
                        "__init__",
                        "_attempt_login",
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token",
                        "cleanup_expired_sessions"
                    ],
                    "docstring": "Authentication manager implementing the platform-agnostic interface.",
                    "base_classes": [
                        "AbstractAuthInterface"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 15
        },
        "backups\\auth_backup_20250605_162224\\auth\\session.py": {
            "language": ".py",
            "functions": [
                "extend",
                "is_valid",
                "time_remaining",
                "__init__",
                "start_cleanup",
                "stop_cleanup",
                "create_session",
                "get_session",
                "invalidate_session",
                "cleanup_expired",
                "_generate_session_id",
                "cleanup_loop"
            ],
            "classes": {
                "Session": {
                    "methods": [
                        "extend",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents an active user session.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "SessionManager": {
                    "methods": [
                        "__init__",
                        "start_cleanup",
                        "stop_cleanup",
                        "create_session",
                        "get_session",
                        "invalidate_session",
                        "cleanup_expired",
                        "_generate_session_id"
                    ],
                    "docstring": "Manages user sessions with automatic cleanup.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 23
        },
        "backups\\auth_backup_20250605_162224\\auth\\token.py": {
            "language": ".py",
            "functions": [
                "is_valid",
                "time_remaining",
                "__init__",
                "generate_token",
                "validate_token",
                "get_token_info",
                "refresh_token",
                "invalidate_token",
                "cleanup_expired",
                "_sign_token"
            ],
            "classes": {
                "TokenInfo": {
                    "methods": [
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents token metadata.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "TokenHandler": {
                    "methods": [
                        "__init__",
                        "generate_token",
                        "validate_token",
                        "get_token_info",
                        "refresh_token",
                        "invalidate_token",
                        "cleanup_expired",
                        "_sign_token"
                    ],
                    "docstring": "Handles token generation, validation, and refresh.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 20
        },
        "backups\\auth_backup_20250605_162744\\auth\\retry.py": {
            "language": ".py",
            "functions": [
                "retry",
                "__init__",
                "calculate_delay",
                "execute",
                "decorator",
                "wrapper"
            ],
            "classes": {
                "RetryError": {
                    "methods": [],
                    "docstring": "Base class for retry-related errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "RetryMechanism": {
                    "methods": [
                        "__init__",
                        "calculate_delay",
                        "execute"
                    ],
                    "docstring": "Implements retry logic with exponential backoff.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 9
        },
        "backups\\auth_backup_20250605_162744\\auth\\session.py": {
            "language": ".py",
            "functions": [
                "extend",
                "is_valid",
                "time_remaining",
                "__init__",
                "start_cleanup",
                "stop_cleanup",
                "create_session",
                "get_session",
                "invalidate_session",
                "cleanup_expired",
                "_generate_session_id",
                "cleanup_loop"
            ],
            "classes": {
                "Session": {
                    "methods": [
                        "extend",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Represents an active user session.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "SessionManager": {
                    "methods": [
                        "__init__",
                        "start_cleanup",
                        "stop_cleanup",
                        "create_session",
                        "get_session",
                        "invalidate_session",
                        "cleanup_expired",
                        "_generate_session_id"
                    ],
                    "docstring": "Manages user sessions with automatic cleanup.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 23
        },
        "backups\\auth_backup_20250605_162744\\auth\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "discord_bot\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\agent_control\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\ai\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\auth\\base.py": {
            "language": ".py",
            "functions": [
                "__post_init__",
                "is_valid",
                "time_remaining"
            ],
            "classes": {
                "ExpirableMixin": {
                    "methods": [
                        "__post_init__",
                        "is_valid",
                        "time_remaining"
                    ],
                    "docstring": "Mixin providing expiration-related functionality.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 6
        },
        "dreamos\\core\\auth\\interface.py": {
            "language": ".py",
            "functions": [
                "login",
                "logout",
                "verify_session",
                "refresh_token"
            ],
            "classes": {
                "AuthError": {
                    "methods": [],
                    "docstring": "Base class for authentication errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "AbstractAuthInterface": {
                    "methods": [
                        "login",
                        "logout",
                        "verify_session",
                        "refresh_token"
                    ],
                    "docstring": "Abstract base class defining the authentication interface.",
                    "base_classes": [
                        "ABC"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 8
        },
        "dreamos\\core\\auth\\retry.py": {
            "language": ".py",
            "functions": [
                "retry",
                "__init__",
                "calculate_delay",
                "execute",
                "decorator",
                "wrapper"
            ],
            "classes": {
                "RetryError": {
                    "methods": [],
                    "docstring": "Base class for retry-related errors.",
                    "base_classes": [
                        "Exception"
                    ],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                },
                "RetryMechanism": {
                    "methods": [
                        "__init__",
                        "calculate_delay",
                        "execute"
                    ],
                    "docstring": "Implements retry logic with exponential backoff.",
                    "base_classes": [],
                    "maturity": "Core Asset",
                    "agent_type": "Utility"
                }
            },
            "routes": [],
            "complexity": 9
        },
        "dreamos\\core\\auth\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\autonomy\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\autonomy\\base\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\autonomy\\error\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\autonomy\\handlers\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\autonomy\\test_debug\\utils\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\autonomy\\validation\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\config\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\logging\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\messaging\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\monitoring\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\self_discovery\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\core\\utils\\file_utils.py": {
            "language": ".py",
            "functions": [
                "read_json",
                "write_json"
            ],
            "classes": {},
            "routes": [],
            "complexity": 2
        },
        "dreamos\\core\\utils\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "dreamos\\social\\utils\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "scripts\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "social\\core\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "social\\strategies\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "social\\strategies\\reddit\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "social\\strategies\\reddit\\handlers\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "social\\strategies\\reddit\\validators\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "social\\strategies\\twitter\\rate_limiting\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "social\\utils\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "tests\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "tests\\core\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "tests\\discord\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "tests\\social\\strategies\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "tests\\stubborn\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "tests\\utils\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "tests\\utils\\mock_discord\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        },
        "tools\\__init__.py": {
            "language": ".py",
            "functions": [],
            "classes": {},
            "routes": [],
            "complexity": 0
        }
    }
}