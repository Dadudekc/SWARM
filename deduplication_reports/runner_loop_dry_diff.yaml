# Runner/Loop Module DRY Analysis Report
# Generated: 2024-03-19
# Agent: Agent-7

duplication_groups:
  - name: response_loop_daemons
    files:
      - path: dreamos/core/autonomy/base/response_loop_daemon.py
        class: BaseResponseLoopDaemon
        lines: 1-150
      - path: dreamos/core/autonomy/core_response_loop_daemon.py
        class: CoreResponseLoopDaemon
        lines: 1-120
      - path: dreamos/core/autonomy/bridge_response_loop_daemon.py
        class: BridgeResponseLoopDaemon
        lines: 1-110
    duplicate_patterns:
      - name: message_processing
        description: "Common message processing logic and error handling"
        lines: 30-80
        consolidation_target: base/response_loop_daemon.py
      - name: state_management
        description: "Shared state tracking and transition logic"
        lines: 90-120
        consolidation_target: base/response_loop_daemon.py
      - name: error_handling
        description: "Duplicate error recovery and retry logic"
        lines: 130-150
        consolidation_target: utils/error_handlers.py

  - name: runner_implementations
    files:
      - path: dreamos/core/autonomy/auto_trigger_runner.py
        class: AutoTriggerRunner
        lines: 1-200
      - path: dreamos/core/autonomy/midnight_runner.py
        class: MidnightRunner
        lines: 1-180
      - path: dreamos/core/autonomy/autonomy_loop_runner.py
        class: AutonomyLoopRunner
        lines: 1-220
    duplicate_patterns:
      - name: test_execution
        description: "Common test execution and result handling"
        lines: 40-100
        consolidation_target: base/runner_core.py
      - name: worker_management
        description: "Duplicate worker pool and task distribution"
        lines: 110-150
        consolidation_target: base/runner_core.py
      - name: result_processing
        description: "Shared result parsing and status updates"
        lines: 160-200
        consolidation_target: utils/result_processor.py

  - name: loop_implementations
    files:
      - path: dreamos/core/message_loop.py
        class: MessageLoop
        lines: 1-150
      - path: dreamos/core/content_loop.py
        class: ContentLoop
        lines: 1-130
      - path: dreamos/core/autonomy_loop.py
        class: AutonomyLoop
        lines: 1-160
      - path: dreamos/core/agent_loop.py
        class: AgentLoop
        lines: 1-140
    duplicate_patterns:
      - name: loop_control
        description: "Common loop control and iteration logic"
        lines: 20-60
        consolidation_target: base/loop_core.py
      - name: event_handling
        description: "Duplicate event processing and dispatch"
        lines: 70-100
        consolidation_target: base/loop_core.py
      - name: state_tracking
        description: "Shared state management and transitions"
        lines: 110-140
        consolidation_target: utils/state_manager.py

  - name: bridge_loops
    files:
      - path: bridge/chatgpt_bridge_loop.py
        class: ChatGPTBridgeLoop
        lines: 1-120
      - path: bridge/bridge_response_loop_daemon.py
        class: BridgeResponseLoopDaemon
        lines: 1-100
    duplicate_patterns:
      - name: message_routing
        description: "Common message routing and dispatch logic"
        lines: 30-70
        consolidation_target: base/bridge_core.py
      - name: error_recovery
        description: "Duplicate error handling and recovery"
        lines: 80-100
        consolidation_target: utils/error_handlers.py

consolidation_priorities:
  - name: response_loop_daemons
    priority: high
    reason: "Critical path components with significant duplication"
    estimated_savings: "~300 lines"
    
  - name: runner_implementations
    priority: high
    reason: "Core functionality with shared patterns"
    estimated_savings: "~400 lines"
    
  - name: loop_implementations
    priority: medium
    reason: "Common patterns but some unique requirements"
    estimated_savings: "~250 lines"
    
  - name: bridge_loops
    priority: medium
    reason: "Specialized functionality with some overlap"
    estimated_savings: "~150 lines"

recommendations:
  - action: "Create base/loop_core.py"
    description: "Extract common loop functionality"
    impact: "High"
    
  - action: "Move to utils/error_handlers.py"
    description: "Consolidate error handling logic"
    impact: "Medium"
    
  - action: "Create base/bridge_core.py"
    description: "Unify bridge-related functionality"
    impact: "Medium"
    
  - action: "Enhance base/runner_core.py"
    description: "Add shared runner patterns"
    impact: "High"

next_steps:
  - "Validate consolidation targets"
  - "Create detailed migration plan"
  - "Prioritize high-impact consolidations"
  - "Schedule phased implementation" 